package readzip;

import java.io.IOException;

import org.apache.hadoop.io.BytesWritable;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.output.MultipleOutputs;

//public class ReadZipReducer extends Reducer<Text, BytesWritable, Text, BytesWritable> {
public class ReadZipReducer extends Reducer<Text, BytesWritable, NullWritable, BytesWritable> {
	
	private MultipleOutputs<NullWritable, BytesWritable> multipleOutputs;
	
	@Override
	protected void setup(Context context) throws IOException, InterruptedException
	{
		multipleOutputs = new MultipleOutputs<NullWritable, BytesWritable>(context);
	}
	
	@Override
	protected void cleanup(Context context) throws IOException, InterruptedException
	{
		multipleOutputs.close();
	}
	
	 

	public void reduce(Text key, Iterable<BytesWritable> values, Context context)
			throws IOException, InterruptedException {
		for(BytesWritable value: values)
		{
			//context.write(key, value);
			/*write(null, value, key-base)*/
			multipleOutputs.write(NullWritable.get(), value, key.toString());
		
			
		}
	}

}
